class PagesCtrl {
    constructor() {
        this.pages = new Array();
        this.pages = new Array();
    }
    addPage(page) {
        this.pages.push(page);
    }
    getCurrentPageId() {
        if (!this.currentPage)
            return "";
        return this.currentPage.getPageId();
    }
    setupPage() {
        const self = this;
        self.closePage();
        let page = self.executeCurrentPageLogic();
        if (page)
            self.currentPage = page;
    }
    closePage() {
        if (this.currentPage) {
            this.currentPage.closePage();
            this.currentPage = null;
        }
    }
    executeCurrentPageLogic() {
        if ($("#pageId").length !== 0) {
            let pageId = $("#pageId").html();
            $("#pageId").remove();
            for (let i = 0; i < this.pages.length; i++) {
                let page = this.pages[i];
                if (pageId === page.getPageId()) {
                    page.execute();
                    return page;
                }
            }
        }
        return null;
    }
    getPathName(pathName) {
        let regexLangCode = /\/[a-z]{2}\-[A-Z]{2}/;
        let regexResults = regexLangCode.exec(pathName);
        if (regexResults !== null && regexResults.index === 0) {
            pathName = pathName.substr(6, pathName.length);
        }
        return pathName;
    }
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jbGllbnQvZWxlbWVudHMvcGFnZXMtY3RybC9zY3JpcHRzL1BhZ2VzQ3RybC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQTtJQUlFO1FBSFEsVUFBSyxHQUFnQixJQUFJLEtBQUssRUFBRSxDQUFDO1FBSXZDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxLQUFLLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRU0sT0FBTyxDQUFDLElBQVU7UUFDdkIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUVNLGdCQUFnQjtRQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVc7WUFBRSxPQUFPLEVBQUUsQ0FBQztRQUNqQyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDdEMsQ0FBQztJQUVNLFNBQVM7UUFDZCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUM7UUFFbEIsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBRWpCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxDQUFDO1FBQzFDLElBQUksSUFBSTtZQUFFLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO0lBQ3BDLENBQUM7SUFFTyxTQUFTO1FBQ2YsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3BCLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDN0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7U0FDekI7SUFDSCxDQUFDO0lBRU8sdUJBQXVCO1FBQzdCLElBQUksQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDN0IsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ2pDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUV0QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQzFDLElBQUksSUFBSSxHQUFTLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBRS9CLElBQUksTUFBTSxLQUFLLElBQUksQ0FBQyxTQUFTLEVBQUUsRUFBRTtvQkFDL0IsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO29CQUNmLE9BQU8sSUFBSSxDQUFDO2lCQUNiO2FBQ0Y7U0FDRjtRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQU9NLFdBQVcsQ0FBQyxRQUFnQjtRQUNqQyxJQUFJLGFBQWEsR0FBVyxzQkFBc0IsQ0FBQztRQUNuRCxJQUFJLFlBQVksR0FBb0IsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUVqRSxJQUFJLFlBQVksS0FBSyxJQUFJLElBQUksWUFBWSxDQUFDLEtBQUssS0FBSyxDQUFDLEVBQUU7WUFDckQsUUFBUSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNoRDtRQUVELE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiIsImZpbGUiOiJzcmMvY2xpZW50L2VsZW1lbnRzL3BhZ2VzLWN0cmwvc2NyaXB0cy9QYWdlc0N0cmwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgUGFnZSB7XG4gIGdldFBhZ2VJZCgpOiBTdHJpbmc7XG4gIGV4ZWN1dGUoKTogdm9pZDtcbiAgY2xvc2VQYWdlKCk6IHZvaWQ7XG59XG5jbGFzcyBQYWdlc0N0cmwge1xuICBwcml2YXRlIHBhZ2VzOiBBcnJheTxQYWdlPiA9IG5ldyBBcnJheSgpO1xuICBwcml2YXRlIGN1cnJlbnRQYWdlO1xuXG4gIHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnBhZ2VzID0gbmV3IEFycmF5KCk7XG4gIH1cblxuICBwdWJsaWMgYWRkUGFnZShwYWdlOiBQYWdlKSB7XG4gICAgdGhpcy5wYWdlcy5wdXNoKHBhZ2UpO1xuICB9XG5cbiAgcHVibGljIGdldEN1cnJlbnRQYWdlSWQoKSB7XG4gICAgaWYgKCF0aGlzLmN1cnJlbnRQYWdlKSByZXR1cm4gXCJcIjtcbiAgICByZXR1cm4gdGhpcy5jdXJyZW50UGFnZS5nZXRQYWdlSWQoKTtcbiAgfVxuXG4gIHB1YmxpYyBzZXR1cFBhZ2UoKSB7XG4gICAgY29uc3Qgc2VsZiA9IHRoaXM7XG5cbiAgICBzZWxmLmNsb3NlUGFnZSgpO1xuXG4gICAgbGV0IHBhZ2UgPSBzZWxmLmV4ZWN1dGVDdXJyZW50UGFnZUxvZ2ljKCk7XG4gICAgaWYgKHBhZ2UpIHNlbGYuY3VycmVudFBhZ2UgPSBwYWdlO1xuICB9XG5cbiAgcHJpdmF0ZSBjbG9zZVBhZ2UoKSB7XG4gICAgaWYgKHRoaXMuY3VycmVudFBhZ2UpIHtcbiAgICAgIHRoaXMuY3VycmVudFBhZ2UuY2xvc2VQYWdlKCk7XG4gICAgICB0aGlzLmN1cnJlbnRQYWdlID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGV4ZWN1dGVDdXJyZW50UGFnZUxvZ2ljKCkge1xuICAgIGlmICgkKFwiI3BhZ2VJZFwiKS5sZW5ndGggIT09IDApIHtcbiAgICAgIGxldCBwYWdlSWQgPSAkKFwiI3BhZ2VJZFwiKS5odG1sKCk7XG4gICAgICAkKFwiI3BhZ2VJZFwiKS5yZW1vdmUoKTtcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnBhZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBwYWdlOiBQYWdlID0gdGhpcy5wYWdlc1tpXTtcblxuICAgICAgICBpZiAocGFnZUlkID09PSBwYWdlLmdldFBhZ2VJZCgpKSB7XG4gICAgICAgICAgcGFnZS5leGVjdXRlKCk7XG4gICAgICAgICAgcmV0dXJuIHBhZ2U7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBNZXRob2QgdGhhdCByZW1vdmVkIGxhbmd1YWdlIHByZWZpeCBmcm9tIHVybC4gRS5nLjogL2VuLUFVL2luZGV4IC0+IC9pbmRleFxuICAgKiBAcGFyYW0gcGF0aE5hbWVcbiAgICogQHJldHVybnMge3N0cmluZ31cbiAgICovXG4gIHB1YmxpYyBnZXRQYXRoTmFtZShwYXRoTmFtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBsZXQgcmVnZXhMYW5nQ29kZTogUmVnRXhwID0gL1xcL1thLXpdezJ9XFwtW0EtWl17Mn0vO1xuICAgIGxldCByZWdleFJlc3VsdHM6IFJlZ0V4cEV4ZWNBcnJheSA9IHJlZ2V4TGFuZ0NvZGUuZXhlYyhwYXRoTmFtZSk7XG5cbiAgICBpZiAocmVnZXhSZXN1bHRzICE9PSBudWxsICYmIHJlZ2V4UmVzdWx0cy5pbmRleCA9PT0gMCkge1xuICAgICAgcGF0aE5hbWUgPSBwYXRoTmFtZS5zdWJzdHIoNiwgcGF0aE5hbWUubGVuZ3RoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aE5hbWU7XG4gIH1cbn1cbiJdfQ==
